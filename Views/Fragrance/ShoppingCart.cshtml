@model List<CartItems>

<style>

    .title {
        margin-bottom: 5vh;
    }

    .card {
        margin: auto;
        max-width: 950px;
        width: 90%;
        box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        border-radius: 1rem;
        border: transparent;
    }

    .cart {
        background-color: #fff;
        padding: 4vh 5vh;
        border-bottom-left-radius: 1rem;
        border-top-left-radius: 1rem;
    }

    .summary {
        background-color: #ddd;
        border-top-right-radius: 1rem;
        border-bottom-right-radius: 1rem;
        padding: 4vh;
        color: rgb(65, 65, 65);
    }

        .summary .col-2 {
            padding: 0;
        }

        .summary .col-10 {
            padding: 0;
        }

    .row {
        margin: 0;
    }

    .title b {
        font-size: 1.5rem;
    }

    .main {
        margin: 0;
        padding: 2vh 0;
        width: 100%;
    }

    .col-2, .col {
        padding: 0 1vh;
    }

    a {
        padding: 0 1vh;
    }

    .close {
        margin-left: auto;
        font-size: 0.7rem;
    }

    img {
        width: 150px;
    }

    .back-to-shop {
        margin-top: 4.5rem;
    }

    h5 {
        margin-top: 4vh;
    }

    hr {
        margin-top: 1.25rem;
    }

    form {
        padding: 2vh 0;
    }

    select {
        border: 1px solid rgba(0, 0, 0, 0.137);
        padding: 1.5vh 1vh;
        margin-bottom: 4vh;
        outline: none;
        width: 100%;
        background-color: rgb(247, 247, 247);
    }

    input {
        border: 1px solid rgba(0, 0, 0, 0.137);
        padding: 1vh;
        margin-bottom: 4vh;
        outline: none;
        width: 100%;
        background-color: rgb(247, 247, 247);
    }

        input:focus::-webkit-input-placeholder {
            color: transparent;
        }

    .btn {
        background-color: #000;
        border-color: #000;
        color: white;
        width: 100%;
        font-size: 0.7rem;
        margin-top: 4vh;
        padding: 1vh;
        border-radius: 0;
    }

        .btn:focus {
            box-shadow: none;
            outline: none;
            box-shadow: none;
            color: white;
            -webkit-box-shadow: none;
            -webkit-user-select: none;
            transition: none;
        }

        .btn:hover {
            color: white;
        }

    a {
        color: black;
    }

        a:hover {
            color: black;
            text-decoration: none;
        }

    #code {
        background-image: linear-gradient(to left, rgba(255, 255, 255, 0.253), rgba(255, 255, 255, 0.185)), url("https://img.icons8.com/small/16/000000/long-arrow-right.png");
        background-repeat: no-repeat;
        background-position-x: 95%;
        background-position-y: center;
    }
</style>
<div class="card">
    <div class="row">
        <div class="col-md-8 cart">
            <div class="title">
                <div class="row">
                    <div class="col"><h4><b>Shopping Cart</b></h4></div>
                    <div class="col align-self-center text-right text-muted">@Model.Count items</div>
                </div>
            </div>

            @foreach (var item in Model)
            {
                <div class="row border-top border-bottom">
                    <div class="row main align-items-center">
                        <div class="col-2"><img class="img-fluid" src="@item.PictureUrl"></div>
                        <div class="col">
                            <div class="row text-muted">@item.Name</div>
                            <div class="row">
                                <div class="description" data-full-text="@item.Description">
                                    @if (item.Description != null)
                                    {
                                        @if (item.Description.Length > 100)
                                        {
                                            @item.Description.Substring(0, 100)
                                        }
                                        else
                                        {
                                            @item.Description
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <a href="#" class="decrease-quantity" data-item-id="@item.FragranceId" style="text-decoration:none">-</a>
                            <a href="#" class="border quantity" style="text-decoration:none">@item.Quantity</a>
                            <a href="#" class="increase-quantity" data-item-id="@item.FragranceId" style="text-decoration:none">+</a>
                        </div>
                        <div class="col price">@item.Price€</div>
                        <div class="col-1">
                            <a href="#" class="remove-item" data-item-id="@item.Id" style="text-decoration:none">×</a>
                        </div>
                    </div>
                </div>
            }

            <a href="@Url.Action("Index", "Hello")">
                <div class="back-to-shop">&leftarrow;<span class="text-muted">Back to shop</span></div>
            </a>
        </div>
        <div class="col-md-4 summary">
            <div><h5><b>Summary</b></h5></div>
            <hr>
            <div class="row">
                <div class="col" style="padding-left:0;">Nr. i Artikujve: @Model.Count</div>
                <div class="col text-right total-price">@Model.Sum(item => item.Price * item.Quantity)€</div>
            </div>
            <form>
                <p>SHIPPING</p>
                <select><option class="text-muted">Standard-Delivery- &euro;5.00</option></select>
                <p>GIVE CODE</p>
                <input id="code" placeholder="Enter your code">
            </form>
            <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
                <div class="col">Totali: </div>
                <!-- Ktu duhet me qit logjiken per promo code a naj zbritje -->
                <div class="col text-right total-price">@Model.Sum(item => item.Price*item.Quantity)€</div>
            </div>
            <button class="btn" type="submit" onclick="location.href='@Url.Action("CheckUserCheckout", "Users")'">CHECKOUT</button>

        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var descriptionElements = document.querySelectorAll(".description");

        descriptionElements.forEach(function (element) {
            element.addEventListener("mouseover", function () {
                var fullText = element.getAttribute("data-full-text");
                element.textContent = fullText;
            });

            element.addEventListener("mouseout", function () {
                var trimmedText = element.getAttribute("data-full-text").substring(0, 50) + "...";
                element.textContent = trimmedText;
            });
        });
    });
    $(document).ready(function () {
        $(".increase-quantity").click(function (e) {
            e.preventDefault();
            var itemId = $(this).data("item-id");
            var quantityElement = $(this).siblings(".quantity");
            var currentQuantity = parseInt(quantityElement.text());
            quantityElement.text(currentQuantity + 1);
            updateCartItemQuantity(itemId,currentQuantity+1)
        });

        $(".decrease-quantity").click(function (e) {
            e.preventDefault();
            var itemId = $(this).data("item-id");
            var quantityElement = $(this).siblings(".quantity");
            var currentQuantity = parseInt(quantityElement.text());
            if (currentQuantity > 1) {
                quantityElement.text(currentQuantity - 1);
            }
            updateCartItemQuantity(itemId, currentQuantity - 1)

        });
        $(".remove-item").click(function (e) {
            e.preventDefault();
            var itemId = $(this).data("item-id");
            $.ajax({
                url: '/Users/DeleteCartItem', 
                type: 'POST',
                data: { id: itemId },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    }
                }
            });
            console.log(itemId);
        });
        function updateTotalPrice() {
            var totalPrice = 0;
            $(".main").each(function () {
                var priceElement = $(this).find(".price");
                var quantityElement = $(this).find(".quantity");
                var price = parseFloat(priceElement.text());
                var quantity = parseInt(quantityElement.text());
                totalPrice += price * quantity;
            });
            $(".total-price").text(totalPrice.toFixed(2) + '€');
        }
        function updateCartItemQuantity(itemId, change) {
            $.ajax({
                url: '/Users/UpdateCartItemQuantity',
                type: 'POST',
                data: { itemId: itemId, quantity: change },
                success: function (response) {
                    if (response.success) {

                        updateTotalPrice();
                    }
                }
            });
        }
    });
    function submitForm() {
            $.ajax({
                url: "@Url.Action("CheckUserCheckout", "Users")",
                type: 'GET',
                success: function (response) {
                    window.location
                }
            });
    }
</script>